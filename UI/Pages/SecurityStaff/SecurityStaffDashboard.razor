@page "/SecurityStaffDashboard"
@inject NavigationManager NavigationManager
@inject IJSRuntime js
@inject SecurityStaffConsumer SecurityStaffConsumer
@inject StaffManagerConsumer StaffManagerConsumer
@inject CampusConsumer CampusConsumer
@inject GateConsumer GateConsumer

<div dir="rtl">
    <h3 class="text-center text-primary mt-4">Welcome to the Academy Security System</h3>

    @if (SecurityStaff != null)
    {
        <div class="container mt-lg-5">
            <div class="d-flex justify-content-between align-items-center">
                <div class="text-end">
                    <h5 class="text-secondary">Gate Name:</h5>
                    <p class="font-weight-bold">@GateName</p>
                </div>
                <button class="btn btn-secondary" @onclick="UpdateGate">Update Gate</button>
            </div>
        </div>
    }

    @if (SecurityStaff != null || SecurityManager != null)
    {
        <div class="container mt-4">
            <div class="row">
                @if (SecurityStaff != null)
                {
                    <div class="col-md-6">
                        <div class="card p-3 shadow-sm text-end">
                            <h5 class="text-secondary">Employee Number:</h5>
                            <p class="font-weight-bold">@SecurityStaff.Sec_ID</p>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="card p-3 shadow-sm text-end">
                            <h5 class="text-secondary">Name:</h5>
                            <p class="font-weight-bold">@SecurityStaff.Name</p>
                        </div>
                    </div>

                    <div class="col-md-6 mt-3">
                        <div class="card p-3 shadow-sm text-end">
                            <h5 class="text-secondary">Role:</h5>
                            <p class="font-weight-bold">@SecurityStaff.Role</p>
                        </div>
                    </div>

                    <div class="col-md-6 mt-3">
                        <div class="card p-3 shadow-sm text-end">
                            <h5 class="text-secondary">Shift Time:</h5>
                            <p class="font-weight-bold">@SecurityStaff.ShiftTime</p>
                        </div>
                    </div>

                    <div class="col-md-6 mt-3">
                        <div class="card p-3 shadow-sm text-end">
                            <h5 class="text-secondary">Campus Name:</h5>
                            <p class="font-weight-bold">@CampusName</p>
                        </div>
                    </div>

                    <div class="col-md-6 mt-3">
                        <div class="card p-3 shadow-sm text-end">
                            <h5 class="text-secondary">Campus Location:</h5>
                            <p class="font-weight-bold">@CampusLocation</p>
                        </div>
                    </div>
                }
                else if (SecurityManager != null)
                {
                    <div class="col-md-6">
                        <div class="card p-3 shadow-sm text-end">
                            <h5 class="text-secondary">Employee ID:</h5>
                            <p class="font-weight-bold">@SecurityManager.StaffManagerId</p>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="card p-3 shadow-sm text-end">
                            <h5 class="text-secondary">Name:</h5>
                            <p class="font-weight-bold">@SecurityManager.Name</p>
                        </div>
                    </div>

                    <div class="col-md-6 mt-3">
                        <div class="card p-3 shadow-sm text-end">
                            <h5 class="text-secondary">Role:</h5>
                            <p class="font-weight-bold">@SecurityManager.Role</p>
                        </div>
                    </div>

                    <div class="col-md-6 mt-3">
                        <div class="card p-3 shadow-sm text-end">
                            <h5 class="text-secondary">Phone Number:</h5>
                            <p class="font-weight-bold">@SecurityManager.ContactNumber</p>
                        </div>
                    </div>
                }
            </div>

            <div class="text-center mt-4">
                <h4 class="text-primary">What service would you like?</h4>
                <div class="d-flex flex-wrap justify-content-center gap-2 mt-3">
                    <button class="btn btn-success m-2" @onclick='() => NavigateTo("/VisitorManagement")'>Add Visitor</button>

                    <AuthorizeView Roles="Security Manager">
                        <Authorized>
                            <button class="btn btn-warning m-2" @onclick='() => NavigateTo("/LogHistory")'>Entry/Exit Report</button>
                            <button class="btn btn-primary m-2" @onclick='() => NavigateTo("/Isblacklisted")'>Blacklisted Visitors</button>
                        </Authorized>
                    </AuthorizeView>

                    <AuthorizeView Roles="Computer Security Officer">
                        <Authorized>
                            <button class="btn btn-primary m-2" @onclick='() => NavigateTo("/LogEntry")'>Add Academy Log Entry</button>
                            <button class="btn btn-danger m-2" @onclick='() => NavigateTo("/AddEmergencyEvent")'>Add Emergency Event</button>
                            <button class="btn btn-info m-2" @onclick='() => NavigateTo("/AddSecurityStaff")'>Add Security Staff</button>
                        </Authorized>
                    </AuthorizeView>
                </div>
            </div>
        </div>
    }
    else
    {
        <p class="text-center text-danger mt-4">Loading data...</p>
    }
</div>

@code {
    private SecurityStaffViewModel SecurityStaff;
    private StaffManagerViewModel SecurityManager;
    private string CampusName = "";
    private string CampusLocation = "";
    private string GateName = "";

    protected override async Task OnInitializedAsync()
    {
        var token = await js.InvokeAsync<string>("sessionStorage.getItem", "authToken");

        if (string.IsNullOrEmpty(token))
        {
            NavigationManager.NavigateTo("/SecurityStaffLogin");
            return;
        }

        try
        {
            var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
            var jwtToken = handler.ReadJwtToken(token);

            var secIdClaim = jwtToken.Claims.FirstOrDefault(c => c.Type == "Sec_ID");
            var staffManagerIdClaim = jwtToken.Claims.FirstOrDefault(c => c.Type == "StaffManagerId");

            if (secIdClaim != null && int.TryParse(secIdClaim.Value, out int secId))
            {
                var securityStaffResult = await SecurityStaffConsumer.GetSecurityStaffById(secId);
                if (securityStaffResult?.Data != null)
                {
                    SecurityStaff = securityStaffResult.Data;

                    if (SecurityStaff.CampusId > 0)
                        await FetchCampusDetails(SecurityStaff.CampusId);

                    if (SecurityStaff.GateId > 0)
                        await FetchGateDetails(SecurityStaff.GateId);
                }
            }
            else if (staffManagerIdClaim != null && int.TryParse(staffManagerIdClaim.Value, out int managerId))
            {
                var staffManagerResult = await StaffManagerConsumer.GetStaffManagerById(managerId);
                if (staffManagerResult?.Data != null)
                {
                    SecurityManager = staffManagerResult.Data;
                }
            }
        }
        catch (Exception ex)
        {
            
        }
    }

    private async Task FetchCampusDetails(int campusId)
    {
        var campus = await CampusConsumer.GetCampusById(campusId);
        if (campus?.Data != null)
        {
            CampusName = campus.Data.CampusName;
            CampusLocation = campus.Data.CampusLocation;
        }
    }

    private async Task FetchGateDetails(int gateId)
    {
        var gate = await GateConsumer.GetGateById(gateId);
        if (gate?.Data != null)
        {
            GateName = gate.Data.GateName;
        }
    }

    private void NavigateTo(string url) => NavigationManager.NavigateTo(url);
    private void UpdateGate() => NavigationManager.NavigateTo("/UpdateGate");
}
